/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root == null) {
            return true;
        }
        return compareSame(root.left, root.right);
    }

    // 比较同一层的左右两个子树，如果他们满足镜面对称则返回true
    private boolean compareSame(TreeNode left, TreeNode right) {
        if (left == null && right == null) {
            return true;
        }

        if (left != null && right != null) {
            if (left.val != right.val) {
                return false;
            }
            boolean innerFlag = compareSame(left.right, right.left);
            boolean outterFlag = compareSame(left.left, right.right);
            if (innerFlag && outterFlag) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
}