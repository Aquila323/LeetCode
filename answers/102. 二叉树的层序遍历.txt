/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        while (que.size() != 0) {
            int count = que.size();
            List<Integer> arr = new ArrayList<>();
            for (int i = 0; i < count; i++) {
                TreeNode tmpNode = que.poll();
                if (tmpNode != null) {
                    arr.add(tmpNode.val);
                    if (tmpNode.left != null) {
                        que.add(tmpNode.left);
                    }
                    if (tmpNode.right != null) {
                        que.add(tmpNode.right);
                    }
                }
            }
            result.add(arr);
        }
        return result;
    }
}