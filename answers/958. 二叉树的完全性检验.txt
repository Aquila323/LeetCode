/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCompleteTree(TreeNode root) {
        Queue<TreeNode> que = new LinkedList<>();
        TreeNode curNode = root;
        boolean endFlag = false;
        while (curNode != null) {
            if (endFlag == true && curNode.left != null) {
                return false;
            }

            if (curNode.left != null) {
                que.add(curNode.left);
            } else {
                endFlag = true;
            }

            if (endFlag == true && curNode.right != null) {
                return false;
            }

            if (curNode.right != null) {
                que.add(curNode.right);
            } else {
                endFlag = true;
            }

            curNode = que.poll();
        }
        return true;
    }
}