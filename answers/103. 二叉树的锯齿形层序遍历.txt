/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) {
            return result;
        }
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        boolean fromLeft = true;
        while (que.size() != 0) {
            List<Integer> arr = new ArrayList<>();
            int count = que.size();
            for (int i = 0; i < count; i++) {
                TreeNode curNode = que.poll();
                if (curNode != null) {
                    arr.add(curNode.val);
                    if (curNode.left != null) {
                        que.add(curNode.left);
                    }
                    if (curNode.right != null) {
                        que.add(curNode.right);
                    }
                }
            }
            if (!fromLeft) {
                Collections.reverse(arr);
            }
            result.add(arr);
            fromLeft = !fromLeft;
        }
        return result;
    }
}